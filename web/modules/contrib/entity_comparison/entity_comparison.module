<?php

/**
 * @file
 * Contains entity_comparison.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\entity_comparison\Entity\EntityComparison;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Field\FieldItemListInterface;

/**
 * Implements hook_help().
 */
function entity_comparison_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the entity_comparison module.
    case 'help.page.entity_comparison':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows user to compare entities.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function entity_comparison_entity_extra_field_info() {
  $fields = [];

  /** @var \Drupal\entity_comparison\Entity\EntityComparison[] $entity_comparisons */
  $entity_comparisons = EntityComparison::loadMultiple();
  foreach ($entity_comparisons as $entity_comparison) {
    // Add a field to the manage display of this entity - bundle pair.
    $entity_type = $entity_comparison->getTargetEntityType();
    $bundle = $entity_comparison->getTargetBundleType();
    $fields[$entity_type][$bundle]['display']['link_for_entity_comparison_' . $entity_comparison->id()] = [
      'label' => t('Link for entity comparison (%label)', [
        '%label' => $entity_comparison->label(),
      ]),
      'weight' => 100,
      'visible' => TRUE,
    ];
  }

  return $fields;
}

/**
 * Implements hook_entity_view().
 */
function entity_comparison_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity_comparisons = EntityComparison::loadByEntityTypeAndBundleType($entity->getEntityTypeId(), $entity->bundle())) {
    foreach ($entity_comparisons as $entity_comparison) {
      $account = \Drupal::currentUser();
      $entity_id = $entity_comparison->id();
      if ($display->getComponent('link_for_entity_comparison_' . $entity_id)) {
        $build['link_for_entity_comparison_' . $entity_id] = [
          '#theme' => 'entity_comparison_link',
          '#id' => $entity->id(),
          '#entity_comparison' => $entity_id,
          '#cache' => [
            'max-age' => 0,
          ],
          '#access' => $account->hasPermission("use $entity_id entity comparison"),
        ];
      }
    }
  }
}

/**
 * Implements hook_entity_bundle_field_info().
 */
function entity_comparison_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  $fields = [];

  $entity_comparisons = EntityComparison::loadByEntityTypeAndBundleType($entity_type->id(), $bundle);
  if (!empty($entity_comparisons)) {
    foreach ($entity_comparisons as $entity_comparison) {
      // Add a field to the manage display of this entity - bundle pair.
      $fields['link_for_entity_comparison_' . $entity_comparison->id()] = BaseFieldDefinition::create('entity_comparison_link')
        ->setLabel(t('Link for entity comparison'))
        ->setDescription(t('User can add or remove content to a comparison list via this link.'))
        ->setCustomStorage(TRUE)
        ->setDisplayConfigurable('form', FALSE)
        ->setDisplayOptions('view', [
          'type' => 'entity_comparison_link',
          'label' => 'hidden',
          'weight' => 1,
          'settings' => [
            'enitity_comparison' => $entity_comparison->id(),
          ],
        ])
        ->setDisplayConfigurable('view', TRUE);
    }
  }

  return $fields;
}

/**
 * Implements hook_views_data_alter().
 */
function entity_comparison_views_data_alter(&$data) {
  $bundle_info_service = \Drupal::service('entity_type.bundle.info');

  // Add comparison link per entity.
  foreach (\Drupal::entityTypeManager()->getDefinitions() as $entity_type => $entity_info) {
    $entity_table = $entity_info->getDataTable();

    if (empty($data[$entity_table])) {
      continue;
    }

    // Get entity bundles.
    $bundles = $bundle_info_service->getBundleInfo($entity_type);
    foreach ($bundles as $bundle => $info) {
      // Get entity comparison link.
      $entity_comparisons = EntityComparison::loadByEntityTypeAndBundleType($entity_type, $bundle);
      if (!empty($entity_comparisons)) {
        foreach ($entity_comparisons as $entity_comparison) {
          $data[$entity_table]['entity_comparison_link_' . $entity_comparison->id()] = [
            'title' => $entity_comparison->getAddLinkText(),
            'help' => t('Appears in: @bundles.', ['@bundles' => $bundle]),
            'real field' => $entity_info->getKey('id'),
            'field' => [
              'id' => 'entity_comparison_link',
            ],
          ];
        }
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function entity_comparison_theme() {
  return [
    'entity_comparison_link' => [
      'variables' => [
        'entity_comparison' => NULL,
        'id' => NULL,
      ],
      'file' => 'entity_comparison.theme.inc',
    ],
  ];
}

/**
 * Implements hook_entity_field_access().
 */
function entity_comparison_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {

  if ($field_definition->getType() === 'entity_comparison_link' && $operation === 'view') {

    $entity_comparison_id = str_replace('link_for_entity_comparison_', '', $field_definition->getName());

    return AccessResult::allowedIfHasPermission($account, "use $entity_comparison_id entity comparison");
  }

  return AccessResult::neutral();
}
